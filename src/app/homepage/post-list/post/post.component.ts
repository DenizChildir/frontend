import { Component, Input, Output, EventEmitter } from '@angular/core';
import {Post, Reply} from "../../models";
import {PostService} from "../../../post-service.service";
@Component({
  selector: 'app-post',
  templateUrl: './post.component.html',
  styleUrls: ['./post.component.css']
})
export class PostComponent {
  constructor(private postService: PostService) { }
  @Input() post!: Post;
  @Output() createReply = new EventEmitter<Reply>();
  @Output() updateReply = new EventEmitter<Reply>();
  @Output() deleteReply = new EventEmitter<number>();
  @Output() updatePost = new EventEmitter<Post>();
  @Output() deletePost = new EventEmitter<number>();

  selectedImage: string | null = null;

  newReply: Reply = {
    id: 0,
    tweetId: 0,
    userName: '',
    title: '',
    postText: '',
    image: null,
    date: ''
  };

  onCreateReply() {
    this.newReply.tweetId = this.post.id;
    this.createReply.emit(this.newReply);
  }

  onUpdateReply(reply: Reply) {
    this.updateReply.emit(reply);
  }

  onDeleteReply(replyId: number) {
    this.post.replies = this.post.replies.filter(reply => reply.id !== replyId);
  }


  onUpdatePost() {
    this.updatePost.emit(this.post);
  }

  onDeletePost() {
    this.deletePost.emit(this.post.id);
  }

  onFileSelected(event: Event) {
    const input = event.target as HTMLInputElement;
    if (input.files && input.files.length > 0) {
      const file = input.files[0];
      const reader = new FileReader();
      reader.onload = () => {
        this.selectedImage = reader.result as string;
      };
      reader.readAsDataURL(file);
    }
  }


  onSubmitReply(userName: string, title: string, postText: string, image: File | null) {
    // Ensure image is either a base64 string or null
    const base64Image = image ? this.selectedImage : null;

    const reply: Reply = {
      id: 0, // This should be generated by the server
      tweetId: this.post.id,
      userName: userName,
      title: title,
      postText: postText,
      image: base64Image,
      date: new Date().toISOString()
    };

    this.createReply.emit(reply);

    // Reset the form and image
    this.selectedImage = null;
  }

}
